name: AuthorizationServer-CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: SonarCloud - Prepare to Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"feliperomero3_AuthorizationServer" /o:"feliperomero3" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions=**\Data\Migrations\**,**\wwwroot\lib\** /d:sonar.cs.opencover.reportsPaths=.\TestResults\**\coverage.opencover.xml
      - name: Restore dependencies
        run: dotnet restore --verbosity minimal src\AuthorizationServer.sln
      - name: Build
        run: dotnet build --no-restore --configuration ${{ env.CONFIGURATION }} --verbosity minimal src\AuthorizationServer.sln
      - name: Test
        run: dotnet test --verbosity minimal --configuration ${{ env.CONFIGURATION }} --collect:"XPlat Code Coverage" --results-directory .\TestResults --settings .\tests\AuthorizationServer.IntegrationTests\coverlet.runsettings .\tests\AuthorizationServer.IntegrationTests\AuthorizationServer.IntegrationTests.csproj
      - name: Publish
        run: dotnet publish --no-build --configuration ${{ env.CONFIGURATION }} --verbosity minimal src\AuthorizationServer.csproj
      - name: SonarCloud - Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AuthorizationServer
          path: src/bin/${{ env.CONFIGURATION }}/netcoreapp3.1/publish
      - name: Upload test coverage results
        uses: actions/upload-artifact@v2
        with:
          name: AuthorizationServer.Coverage
          path: .\TestResults
